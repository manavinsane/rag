[[["2926bf46-6c33-48a5-bd50-a9d44ad3f1d5",{"pageContent":"\n\nJAKARTA SERVER PAGES, \nJSP LIFE-CYCLE AND ITS PHASES\nProf. Hardik Parmar\nAssistant Professor\nInformation Technology Department\nDharmsinh Desai University, Nadiad\n\nJAKARTA SERVER PAGES\nJakarta Server Pages(JSP; formerlyJava Server Pages) is a collection of \ntechnologies that helpssoftware developerscreatedynamically generated web \npagesbased onHTML,XML,SOAP, or other document types.\nReleased in 1999 bySun Microsystems,\n \nJSP is similar toPHPandASP, but uses \ntheJava programming language.\nTo deploy and run Jakarta Server Pages, a compatible web server with aservlet \ncontainer, such asApache TomcatorJetty, is required.\nJSPpagesareHTMLpageswithembeddedcodethatallowstoaccessdatafrom\nJavacoderunningontheserver.\n\nJAKARTA SERVER PAGES\nJakarta Server Pages (JSP) is a technology used for creating dynamic web pages in \nJava-based web applications. \nIt's a part of the Jakarta EE (formerly Java EE) platform, which provides a set of \nspecifications for building enterprise-level, scalable, and reli","metadata":{"id":0}}],["4ff89580-5ec2-419e-bb70-6b8357c5a35b",{"pageContent":"dynamic web pages in \nJava-based web applications. \nIt's a part of the Jakarta EE (formerly Java EE) platform, which provides a set of \nspecifications for building enterprise-level, scalable, and reliable Java web \napplications.\nJSPcontainsanextensionof.jsp\n\nBENEFITS OF JSP\n❑WriteOnce,RunAnywhereproperties\n❑High quality tool support\n❑Separation of Roles\n❑Reuseofcomponentsandtaglibraries\n❑Separationofdynamicandstaticcontent\n❑Supportforactions,expressions,andscripting\n❑WebaccesslayerforN-tierenterpriseapplicationarchitecture(s)\n\nWHAT IS JSP PAGE?\nAJSPpageisatext-baseddocumentthatdescribeshowtoprocessarequestto\ncreatearesponse.Thedescriptionintermixestemplatedatawithdynamicactionsand\nleveragestheJavaPlatform.\nJSPtechnologysupportsanumberofdifferentparadigmsforauthoringdynamic\ncontent.ThekeyfeaturesofJakartaServerPagesare:\n❑Standarddirectives\n❑Standardactions\n❑Scriptingelements\n❑TagExtensionmechanism\n❑Templatecontent\n\nJSP VS. SERVLET\nRelationship between JSP & Servlet \nJSP is an interface ","metadata":{"id":1}}],["0189d1ec-1497-4793-953e-37e8e5fe5d50",{"pageContent":"aturesofJakartaServerPagesare:\n❑Standarddirectives\n❑Standardactions\n❑Scriptingelements\n❑TagExtensionmechanism\n❑Templatecontent\n\nJSP VS. SERVLET\nRelationship between JSP & Servlet \nJSP is an interface on top of Servlets. \nA JSP program is compiled into a Java servlet before execution. \nWhy JSP?\n✓Easier to write than servlets.\n✓Designers can write HTML, programmers can write Java portions \nServlets came first, followed by JSP\n\nJSP VS. SERVLET\nAdvantages of Servlets \n1.Performance \n▪Get loaded upon first request \n▪Multithreading \n✓Each request runs in its own separate thread \n2.Simplicity \n▪Run inside controlled server environment \n▪No specific client software is needed: Web browser is enough \n\nCOMPONENTS AND CONTAINERS\nJSPpagesandservletclassesarecollectivelyreferredtoaswebcomponents.JSP\npagesaredeliveredtoacontainerthatprovidestheservicesindicatedintheJSP\nComponentContract.\nTheseparationofcomponentsfromcontainersallowsthereuseofcomponents,with\nquality-of-servicefeaturesprovidedbythecont","metadata":{"id":2}}],["6ce2d6ad-fdf5-4ea4-8961-f71b3f292f7b",{"pageContent":"esaredeliveredtoacontainerthatprovidestheservicesindicatedintheJSP\nComponentContract.\nTheseparationofcomponentsfromcontainersallowsthereuseofcomponents,with\nquality-of-servicefeaturesprovidedbythecontainer.\n\nJSP ARCHITECTURE\nJakartaServerPagesarepartofa3-tierarchitecture.\nAserver(generallyreferredtoasapplicationorwebserver)supportstheJakarta\nServerPages.\nThisserverwillactasamediatorbetweentheclientbrowserandadatabase.\n\nJSP ARCHITECTURE\n\nJSP ARCHITECTURE FLOW\n1.TheusergoestoaJSPpageandmakestherequestviainternetinuser’sweb\nbrowser.\n2.TheJSPrequestissenttotheWebServer.\n3.Webserveracceptstherequested.jspfileandpassestheJSPfiletotheJSP\nServletEngine.\n4.IftheJSPfilehasbeencalledthefirsttimethentheJSPfileisparsedotherwise\nservletisinstantiated.ThenextstepistogenerateaservletfromtheJSPfile.The\ngeneratedservletoutputissentviatheInternetformwebservertousersweb\nbrowser.\n5.Nowinlaststep,HTMLresultsaredisplayedontheuserswebbrowser.\n\nJSP LIFE CYCLE\n\nJSP LIFE CYCLE\nPHASEDESCRIPTION\nTranslationJSPcont","metadata":{"id":3}}],["9aa7bf70-c8ee-492a-be27-f7537b091d2b",{"pageContent":"eratedservletoutputissentviatheInternetformwebservertousersweb\nbrowser.\n5.Nowinlaststep,HTMLresultsaredisplayedontheuserswebbrowser.\n\nJSP LIFE CYCLE\n\nJSP LIFE CYCLE\nPHASEDESCRIPTION\nTranslationJSPcontainerparsestheJSPpages.ItthentranslatetheJSPpages\ntogeneratecorrespondingservletsourcecode.IfJSPfilenameis\nhello.jsp,usuallyitisnamedashello_jsp.javabythecontainer.\nPage \nCompilation\nIfthetranslationissuccessful,thegeneratedjavafileisthen\ncompiledbythecontainer.\nClass LoadingOnceJSPiscompiledasservletclass,itslifecycleissimilarto\nservlet.Thecompiledclassisthenloadedintothememory\nInstance \nCreation\nOnceJSPclassisloadedintomemory,itsobjectisinstantiatedby\nthecontainer.\n\nJSP LIFE CYCLE\nPHASEDESCRIPTION\nCall jspInit() or \nInitialization\nDuringthisphasetheJSPclassisinitializedtransformed\nfromanormalclasstoservlet.Onceinitializationisover,\nServletConfigandServletContextobjectsbecome\naccessibletoJSPclass.MethodjspInit()iscalledonly\nonceinJSPlifecycle.Itinitializesconfigparams.\nCall_jspServiceor\nR","metadata":{"id":4}}],["f0d02eb1-bb73-4ae1-9901-ae758c46df10",{"pageContent":"lclasstoservlet.Onceinitializationisover,\nServletConfigandServletContextobjectsbecome\naccessibletoJSPclass.MethodjspInit()iscalledonly\nonceinJSPlifecycle.Itinitializesconfigparams.\nCall_jspServiceor\nRequestProcessing\nThismethodiscalledforeachclientrequest.\nCall jspDestroy or DestroyThisisthelastphaseandthismethodiscalledwhenthe\ncontainerdecidestounloadJSPfrommemory.\n\nWRITING A JSP\n\nWRITING A JSP\n\nWRITING A JSP\n\nWRITING A JSP\n\nWRITING A JSP\n\nWRITING A JSP\n\nA JSP file that Displays the Date\n<!DOCTYPE html>\n<html>\n     <head>\n         <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n         <title>JSP Page</title>\n     </head>\n     <body>\n         <h1>Welcome to my JSP Page!</h1>\n         <p>Today's date is: <%= new java.util.Date()%></p>\n     </body>\n</html>\n\nOUTPUT:\n\nREFERENCES\nBryan Basham, Kathy Sierra, Bert Bates, Head First Servlets & JSP, 2nd Edition, \nPublication: O-reilly.\nBruce W. Perry, Java Servlet & JSP Cookbook Publisher: O'Reilly\nhttps://en.wikipedia.org","metadata":{"id":5}}],["e692240d-fb39-40cc-a8de-33f234d56bc6",{"pageContent":"ERENCES\nBryan Basham, Kathy Sierra, Bert Bates, Head First Servlets & JSP, 2nd Edition, \nPublication: O-reilly.\nBruce W. Perry, Java Servlet & JSP Cookbook Publisher: O'Reilly\nhttps://en.wikipedia.org/wiki/Jakarta_Server_Pages\nhttps://jakarta.ee/specifications/pages/3.0/jakarta-server-pages-spec-3.0\nhttps://javabeat.net/","metadata":{"id":6}}]],{"0":"2926bf46-6c33-48a5-bd50-a9d44ad3f1d5","1":"4ff89580-5ec2-419e-bb70-6b8357c5a35b","2":"0189d1ec-1497-4793-953e-37e8e5fe5d50","3":"6ce2d6ad-fdf5-4ea4-8961-f71b3f292f7b","4":"9aa7bf70-c8ee-492a-be27-f7537b091d2b","5":"f0d02eb1-bb73-4ae1-9901-ae758c46df10","6":"e692240d-fb39-40cc-a8de-33f234d56bc6"}]